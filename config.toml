baseURL = "https://apibot-org.github.io/"
languageCode = "en-us"
title = "Apibot"
theme = "kube"
description = "Apibot is a tool that allows you to do API integration test. Helps you understand the flow of information by visualizing your API interactions"
Paginate = 4
canonifyURLs = true
googleAnalytics = "UA-100119885-1"

[params]
  RSSLink = "/index.xml"
  author = "newpixcom" # add your company name
  github = "" # add your github profile name
  twitter = "" # add your twitter profile
  email = "carlos.duque@outlook.com"

  # About section
  [params.about]
    enable = true
    title = "How it works"
    subtitle = "Surprisingly easy"
    endpoint = "Be part<br>of our<br>[story!](#contact)"

    # The events will be listed from the top to the bottom.
    # All images are stored under 'static/img/about'.
    # Replace them with your own.
    [[params.about.events]]
      img = "1.jpg"
      date = ""
      title = "Create your scenario"
      description = "Open the Apibot app and create a new project by selecting **New Graph** from the menu bar. Give it a name and a description"

    [[params.about.events]]
      img = "2.jpg"
      date = ""
      title = "Add nodes to your graph"
      description = "By using our drag and drop GUI it is easy, and efficient to create the workflow of your test"

    [[params.about.events]]
      img = "3.jpg"
      date = ""
      title = "Complete the inputs"
      description = "For each node data might be needed so you have a successfull test execution"

    [[params.about.events]]
      img = "4.jpg"
      date = ""
      title = "Execute"
      description = "Click **Run** at the menu bar. <br> See the result of your execution on the execution tab, by selection **Executions** on the menu bar"

  # Contact section
  [params.contact]
    enable = true
    title = "Contact us"
    subtitle  = "Send us a message so we could get in touch and you could use our wonderful app"
    buttonText = "Send message"

    # Since this template is static, the contact form uses www.formspree.io as a
    # proxy. The form makes a POST request to their servers to send the actual
    # email. Visitors can send up to a 1000 emails each month for free.
    #
    # What you need to do for the setup?
    #
    # - set your email address under 'email' below
    # - upload the generated site to your server
    # - send a dummy email yourself to confirm your account
    # - click the confirm link in the email from www.formspree.io
    # - you're done. Happy mailing!

    # It is possible to substitute formspring with other providers
    # as an example the mailout plugin from caddy.
    # Provide the post URL for the form and depending on the provider
    # add some custom JS script to finish the implementation.
    # postURL = "https://example.com/mailout/"

        # Success and error message overwrite for async contact form
    #thanks = "Thank you for awesomely contacting us."
    #error = "Message could not be send. Please contact us at mail@example.com instead."

    # 'warning' defines error messages for invalid inputs
    [params.contact.form.name]
      text = "Your Name *"
      warning = "Please enter your name."

    [params.contact.form.email]
      text = "Your Email *"
      warning = "Please enter your email address."

    [params.contact.form.phone]
      text = "Your Phone *"
      warning = "Please enter your phone number."

    [params.contact.form.message]
      text = "Your Message *"
      warning = "Please enter a message."

      # Add optional form fields to identify contact forms
      #[[params.contact.form.hidden]]
      #  name = "someID"
      #  value = "example.com"
      #
      #[[params.contact.form.hidden]]
      # Special values for name such as "page" and "site" will be autofilled
      #  name = "page"

[[menu.main]]
    name = "Docs"
    weight = -100
    url = "/docs/"
#[[menu.main]]
#    name = "Blog"
#    weight = -100
#    url = "/blog/"
[[menu.main]]
    name = "Faq"
    weight = -100
    url = "/faq/"



